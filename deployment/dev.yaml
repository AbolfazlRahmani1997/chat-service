app:
  repository: git.oteacher.org:5001/oteacherc/chat
  tag: "latest"
  pullPolicy: Always
  env:
    APP_NAME: "chat_service"
    APP_ENV: "dev"
    MONGO_DB_HOST: 10.0.0.15
    MONGO_DB_PORT: 27017
    MONGO_DB_DATABASE: chat
    MONGO_DB_USERNAME: amir
    MONGO_DB_PASSWORD: d55t1kq6tg4p1ca2
    RABBITMQ_HOST: rabbit-dev-rabbitmq.rabbit-dev
    RABBITMQ_PORT: 5672
    RABBITMQ_USER: user
    RABBITMQ_PASSWORD: 5KagXebV8DXNeQWa
    RABBITMQ_VHOST: /
    RABBITMQ_QUEUE: chat-service
    REDIS_HOST: cache-master
    REDIS_PASSWORD: null
    REDIS_PORT: 6379




    PUBLIC_GATEWAY_URL: https://dev.oteacher.org

    GATEWAY_URL: http://user-gateway-dev-laravel-helm.user-gateway-dev
    MAIN_URL: http://main-service-dev-laravel-helm.main-service-dev/
    PAYMENT_URL: http://payment-dev-laravel-helm.payment-dev/
    DISCOUNT_URL: http://discount-service-dev-laravel-helm.discount-service-dev/

  web:
    enabled: true
    web_server: "nginx"
    replicaCount: 1

redisQueue:
  architecture: standalone
  fullnameOverride: queue
  auth:
    enabled: false

imagePullSecrets: [ { name: git.oteacher.org } ]
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
# fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
# runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chat.dev.oteacher.org
      paths:
        - path: /chat
          pathType: Prefix
  tls: []
  #  - secretName: laravel-tls
  #    hosts:
  #      - laravel.local

resources: {}
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
#   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

